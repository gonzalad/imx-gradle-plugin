/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'Pounet' at '15/01/16 01:12' with Gradle 2.9
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.9/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
plugins {
    id 'groovy'
    id 'maven-publish'
}

// In this section you declare where to find the dependencies of your project
repositories {
    mavenLocal()
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
	compile gradleApi()
	compile localGroovy()
	compile("org.hidetake:groovy-ssh:1.1.8") {
		exclude module: 'groovy-all'
	}
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.13'
	compile 'commons-io:commons-io:2.4'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
	testRuntime 'mysql:mysql-connector-java:5.1.16'
	testRuntime 'com.oracle:ojdbc6:11.2.0.4'
}

group 'com.up.imx'
version '1.0.0-SNAPSHOT'

tasks.withType(GroovyCompile) {
    groovyOptions.encoding = 'Cp1252'
}

/*test {
    minHeapSize = "128m"
    maxHeapSize = "512m"
    testLogging {
        // set options for log level LIFECYCLE
        events "failed"
        exceptionFormat "short"

        // set options for log level DEBUG
        //debug {
        //    events "started", "skipped", "failed"
        //    exceptionFormat "full"
        //}

        // remove standard output/error logging from --info builds
        // by assigning only 'failed' and 'skipped' events
        //info.events = ["failed", "skipped"]
        //showStandardStreams = false
    }

}*/

task sourceJar(type: Jar) {
	from sourceSets.main.allJava
}

publishing {
//	repositories {
//		maven {
//			// change to point to your repo, e.g. http://my.org/repo
//			url "$buildDir/repo"
//		}
//	}
	publications {
        maven(MavenPublication) {
            //groupId 'com.up.imx'
            //artifactId 'imx-gradle-plugin'
            //version '1.0.0-SNAPSHOT'

            from components.java
        }
		mavenJava(MavenPublication) {
			from components.java
            artifact sourceJar {
                classifier "sources"
            }
		}
	}
	repositories {
		maven {
			url "file://Pardmp62sh/PFBUR_8/UP-SO/iMX/70 - Technique/70-80 Patchs CODIX/libs/m2"
		}
	}
}

processResources {
	println "test classesDir: $project.sourceSets.test.output.classesDir"
	// transforme les sauts de ligne dans fichiers unix
//	['**/*.ksh', '**/*.sh'].each {
//		filesMatching(it) {
//			filter (FixCRLF, eol: 'lf')
//		}
//	}
}